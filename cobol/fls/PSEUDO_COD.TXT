DOCUMENTOS:
 INPUT
 NODES
 SEARCH 
 OUTPUT
//LER ARQUIVO DE ENTRADA
 FOR CONECTION IN INPUT{
    //CATALOG
    LET INPUT.A //HOLDS THE FIRST NODE IN THE CONECTION
    LET INPUT.B //HOLDS THE SECOND NODE IN THE CONECTION
    //CHECK IF NODE A IS NOT IN THE NODES LIST, IF IT IS NOT, ADD IT TO THE LIST
    
    IF CHECK(A) EQUALS 0{
        ADD_ADN_COMPUTE(A)//ADD IT TO THE LIST OF NODES, 
        //AND ADD EVERY POSSIBLE NEW CONNECTION GENERATED BY THAT NOVELTY
    }
    IF CHECK(b) EQUALS 0{
        ADD_ADN_COMPUTE(b)//ADD IT TO THE LIST OF NODES, 
        //AND ADD EVERY POSSIBLE NEW CONNECTION GENERATED BY THAT NOVELTY
    }



}


FUNC CHECK(X){
    //RETURNS THE POSITION OF THE NODE X IN THE NODES FILE,
    //RETURNS 0 IF IT DOES NOT FIND IT IN THE NODES FILE

    FOR NODE IN NODES (BREAK IF CT-00 EQUALS 0){
        IF NODE EQUALS X{
            BREAK
        }


    }

}

FUNC ADD_ADN_COMPUTE(X){
    
    //ADD EVERY NEW POSSIBLE CONNECTION (WITH THEIR VALUES)
    FOR NODE IN NODES{
        APPEND_CONNECTION_ON_OUTPUT(X, NODE)

    }
    //ADD X TO NODES LIST
    APPEND_NODE(X)
    
}

FUNC APPEND_CONNECTION_ON_OUTPUT(A, B){
    //APPENDS A NEW CONNECTION ON THE OUTPUT FILE
    //COMPUTE THE VALUE OF THE CONNECTION


    //

}
